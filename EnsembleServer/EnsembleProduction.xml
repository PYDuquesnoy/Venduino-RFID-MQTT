<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2016.4 (Build 640U)" ts="2016-11-02 12:46:52">
<Class name="PYD.Venduino.BO.Database">
<Description>
Business Operation to Write Venduino Data to tables</Description>
<Super>Ens.BusinessOperation</Super>
<TimeChanged>64207,51552.388005</TimeChanged>
<TimeCreated>64207,39461.826839</TimeCreated>

<Property name="isAutoCreate">
<Description>
Do we want to Automatically Create Cards in the DB for Unknown cards</Description>
<Type>%Boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="AutoCreateBalance">
<Description>
The Balance amount assigned to AutoCreated Cards</Description>
<Type>%Integer</Type>
<InitialExpression>10</InitialExpression>
</Property>

<Parameter name="SETTINGS">
<Default>isAutoCreate,AutoCreateBalance,ReplyCodeActions,RetryInterval,AlertRetryGracePeriod:Alerting,FailureTimeout,QueueCountAlert:Alerting,QueueWaitAlert:Alerting,SendSuperSession</Default>
</Parameter>

<Parameter name="INVOCATION">
<Default>Queue</Default>
</Parameter>

<Method name="Transaction">
<Description>
Write a Transation to table</Description>
<FormalSpec>pRequest:PYD.Venduino.Msg.BuyRequest,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		//
		$$$THROWONERROR(tSC,##class(PYD.Venduino.Data.Sale).Add(pRequest.CardID,pRequest.Tray,pRequest.Price))
		$$$TRACE("Adding Sale:"_pRequest.CardID)
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Method name="Status">
<FormalSpec>pRequest:PYD.Venduino.Msg.StatusRequest,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	quit ##class(PYD.Venduino.Data.Status).UpdateStatus("A",pRequest.Status)
]]></Implementation>
</Method>

<Method name="GetCardInfo">
<FormalSpec>pRequest:PYD.Venduino.Msg.CardRequest,*pResponse:PYD.Venduino.Msg.CardReply</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		set tCard=##class(PYD.Venduino.Data.Card).%OpenId(pRequest.CardID)
		if ('$isObject(tCard)&&..isAutoCreate) {
			//AutoCreate
			set tCard=##class(PYD.Venduino.Data.Card).%New()
			set tCard.CardID=pRequest.CardID
			set tCard.Balance=..AutoCreateBalance
			$$$THROWONERROR(tSC,tCard.%Save(1))
		}
		set pResponse=##class(PYD.Venduino.Msg.CardReply).%New()
		If ($isobject(tCard)) {
			set pResponse.Balance=tCard.Balance
			set pResponse.Name=tCard.Name
			set pResponse.CardID=tCard.CardID
		}else{
			$$$TRACE("CARD not found: "_pRequest.CardID)
			set pResponse.Balance=0
			set pResponse.Name=""
			set pResponse.CardID=""
		}
		
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
	<MapItem MessageType="PYD.Venduino.Msg.BuyRequest"> 
		<Method>Transaction</Method>
	</MapItem>
	<MapItem MessageType="PYD.Venduino.Msg.StatusRequest"> 
		<Method>Status</Method>
	</MapItem>
	<MapItem MessageType="PYD.Venduino.Msg.CardRequest"> 
		<Method>GetCardInfo</Method>
	</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.BO.MqttPub">
<Super>Ens.Java.BusinessOperation</Super>
<TimeChanged>64204,81976.75959</TimeChanged>
<TimeCreated>64204,81976.755834</TimeCreated>
<GeneratedBy>EnsLib.JavaGateway.Initiator</GeneratedBy>

<Property name="LogFile">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="MQTTClientName">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="MQTTPort">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="MQTTServer">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="MQTTTopicRoot">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Parameter name="JarFile">
<Default>/iot/VenduinoBO.jar</Default>
</Parameter>

<Parameter name="JavaClass">
<Default>PYD.Venduino.java.MqttBO</Default>
</Parameter>

<Parameter name="SETTINGS">
<Default>MQTTServer,MQTTPort,MQTTClientName,MQTTTopicRoot,LogFile</Default>
</Parameter>
</Class>


<Class name="PYD.Venduino.BP.BPCard.Context">
<Description>
This class is generated by the PYD.Venduino.BP.BPCard BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>PYD.Venduino.BP.BPCard</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Context</Super>
<TimeChanged>64212,38091.383573</TimeChanged>
<TimeCreated>64207,46358.832585</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Property name="CardReply">
<Type>PYD.Venduino.Msg.CardReply</Type>
</Property>

<Method name="OnResponse1">
<Description>
Response Handler for call to Database</Description>
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,request:PYD.Venduino.Msg.CardRequest,response:Ens.Response,callrequest:PYD.Venduino.Msg.CardRequest,callresponse:PYD.Venduino.Msg.CardReply,callname:%String</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,context.CardReply=callresponse
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("PYD.Venduino.BP.BPCard.Thread1","OnResponse1")
 Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>ContextDefaultData1</DefaultData>
<Data name="ContextDefaultData1">
<Structure>listnode</Structure>
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>CardReply</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.BP.BPCard.Thread1">
<Description>
This class is generated by the PYD.Venduino.BP.BPCard BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>PYD.Venduino.BP.BPCard</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Thread</Super>
<TimeChanged>64212,38102.379352</TimeChanged>
<TimeCreated>64212,38091.367015</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Method name="S1">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Do ##class(Ens.Util.Trace).WriteTrace("user","PYD.Venduino.BP.BPCard","S1","Begin")
 #; --- Begin Call GetCardInfo ---
 #; --- Begin Request ---
 Set callrequest=##class(PYD.Venduino.Msg.CardRequest).%New()
 If '$IsObject(callrequest) Set status=%objlasterror Quit
 Set status=$$$OK,callrequest=request
 If $$$ISERR(status) Quit
 Set status=..MakeAsyncCall("OnResponse1","Database",callrequest,"GetCardInfo",1,0,"GetCardInfo",1)
 If $$$ISERR(status) Quit
 Kill callrequest
 #; --- End Request ---
 #; --- End Call GetCardInfo ---
 Do ..%PendingResponses.Clear(),..%SyncResponses.Clear()
 Set ..%SyncTimedOut=0,..%PendingTimeout="",..%PendingAlarmHandle="",..%SyncName=""
 If ..%Process.IsResponsePending("GetCardInfo") Do ..%PendingResponses.SetAt("","GetCardInfo")
 If ..%PendingResponses.Count()>0 {
    Set %name="",%alarmhandle=""
    Set status=..%Process.MakeTimerCall("_Timeout",.%name,30,"GetCardInfo",.%alarmhandle,"")
    If $$$ISERR(status) Quit
    Do ..%PendingResponses.SetAt("",%name) Set ..%PendingTimeout=%name,..%PendingAlarmHandle=%alarmhandle,..%SyncName=""
 }
 If ..%PendingResponses.Count()=0 {
    Set ..%NextState="S3"
 } else {
    Set ..%NextState="S2",..%Wait=1
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S1") Goto Exit
]]></Implementation>
</Method>

<Method name="S2">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 If ..%PendingResponses.Count()=0 {
    Set ..%NextState="S3"
 } else {
    Set ..%NextState="S2",..%Wait=1
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S2") Goto Exit
]]></Implementation>
</Method>

<Method name="S3">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 #; --- Begin Call OutputRouter ---
 #; --- Begin Request ---
 Set callrequest=##class(PYD.Venduino.Msg.CardReply).%New()
 If '$IsObject(callrequest) Set status=%objlasterror Quit
 Set status=$$$OK,callrequest=context.CardReply
 If $$$ISERR(status) Quit
 Set status=..MakeAsyncCall("","OutputRouter",callrequest,"OutputRouter",1,0,"OutputRouter",0)
 If $$$ISERR(status) Quit
 Kill callrequest
 #; --- End Request ---
 #; --- End Call OutputRouter ---
 Do process.ClearAllPendingResponses()
 Set ..%NextState="Stop"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S3") Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="PYD.Venduino.BP.BPCard">
<Description>
</Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BusinessProcessBPL</Super>
<TimeChanged>64207,46358.775556</TimeChanged>
<TimeCreated>64207,46357.320906</TimeCreated>

<XData name="BPL">
<Description>
BPL Definition</Description>
<XMLNamespace>http://www.intersystems.com/bpl</XMLNamespace>
<Data><![CDATA[
<process language='objectscript' request='PYD.Venduino.Msg.CardRequest' response='Ens.Response' height='2000' width='2000' >
<context>
<property name='CardReply' type='PYD.Venduino.Msg.CardReply' instantiate='0' />
</context>
<sequence xend='200' yend='550' >
<trace name='Begin' value='"Begin"' xpos='200' ypos='250' />
<call name='GetCardInfo' target='Database' async='0' timeout='30' xpos='200' ypos='350' >
<request type='PYD.Venduino.Msg.CardRequest' >
<assign property="callrequest" value="request" action="set" />
</request>
<response type='PYD.Venduino.Msg.CardReply' >
<assign property="context.CardReply" value="callresponse" action="set" />
</response>
</call>
<call name='OutputRouter' target='OutputRouter' async='1' xpos='200' ypos='450' >
<request type='PYD.Venduino.Msg.CardReply' >
<assign property="callrequest" value="context.CardReply" action="set" />
</request>
<response type='Ens.Response' />
</call>
</sequence>
</process>
]]></Data>
</XData>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="PYD.Venduino.BS.MqttSub">
<Super>Ens.Java.BusinessService</Super>
<TimeChanged>64204,78015.587622</TimeChanged>
<TimeCreated>64204,78015.586133</TimeCreated>
<GeneratedBy>EnsLib.JavaGateway.Initiator</GeneratedBy>

<Property name="MQTTClientName">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="MQTTPort">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="MQTTServer">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="MQTTTopic">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Parameter name="JarFile">
<Default>/iot/VenduinoBS.jar</Default>
</Parameter>

<Parameter name="JavaClass">
<Default>PYD.Venduino.java.MqttBS</Default>
</Parameter>

<Parameter name="SETTINGS">
<Default>MQTTServer,MQTTPort,MQTTClientName,MQTTTopic</Default>
</Parameter>
</Class>


<Class name="PYD.Venduino.BS.UICalls">
<Description>
Calls to Ensemble from the UI
Direct Invocation of Business Service</Description>
<Super>Ens.BusinessService</Super>
<TimeChanged>64212,33067.690447</TimeChanged>
<TimeCreated>64206,82044.173111</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// Add target to Setting: send request to outbound router

]]></Content>
</UDLText>

<Property name="TargetConfigNames">
<Description>
Configuration item(s) to which to send messages</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="2000"/>
</Property>

<Parameter name="SETTINGS">
<Default><![CDATA[TargetConfigNames:Basic:selector?multiSelect=1&context={Ens.ContextSearch/ProductionItems?targets=1&productionName=@productionId},GenerateSuperSessionID:Additional,AlertGracePeriod:Alerting]]></Default>
</Parameter>

<Method name="Offer">
<Description>
To Send a Special Offer to the Venduino machine</Description>
<FormalSpec>pPrice:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		set tMsg=##class(PYD.Venduino.Msg.OfferRequest).%New()
		set tMsg.Price=+pPrice
		do ..ProcessInput(tMsg,.rsp,"OFFER")
	}catch errObj {
		$$$TRACE("CATCH:"+errObj.DisplayString())
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// To Send a Price Change to the Venduino IOT

]]></Content>
</UDLText>

<Method name="Price">
<FormalSpec>pPrice:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		set tMsg=##class(PYD.Venduino.Msg.PriceRequest).%New()
		set tMsg.Price=+pPrice
		do ..ProcessInput(tMsg,.rsp,"PRICE")
	}catch errObj {
		$$$TRACE("CATCH:"+errObj.DisplayString())
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// 

]]></Content>
</UDLText>

<Method name="OnProcessInput">
<FormalSpec>pInput:%RegisteredObject,*pOutput:%RegisteredObject,pHint:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		set pOutput=##class(Ens.StringContainer).%New()
		//---
		For iTarget=1:1:$L(..TargetConfigNames, ",") { Set tOneTarget=$ZStrip($P(..TargetConfigNames,",",iTarget),"<>W")  Continue:""=tOneTarget
			Set tSC1=..SendRequestAsync(tOneTarget,pInput)  Set:$$$ISERR(tSC1) tSC=$$$ADDSC(tSC,tSC1)
		}
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>
</Class>


<Class name="PYD.Venduino.DT.CardReply2XML">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64207,50164.253052</TimeChanged>
<TimeCreated>64204,80693.563758</TimeCreated>
<DependsOn>PYD.Venduino.Msg.CardReply,EnsLib.EDI.XML.Document</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='PYD.Venduino.Msg.CardReply' targetClass='EnsLib.EDI.XML.Document' targetDocType='message:message' create='new' language='objectscript' >
<assign value='"CARD"' property='target.{type}' action='set' />
<assign value='source.CardID_"|"_source.Name_"|"_source.Balance' property='target.{content}' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.DT.OfferRequest2XML">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64204,80789.825793</TimeChanged>
<TimeCreated>64204,80789.824739</TimeCreated>
<DependsOn>PYD.Venduino.Msg.OfferRequest,EnsLib.EDI.XML.Document</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='PYD.Venduino.Msg.OfferRequest' targetClass='EnsLib.EDI.XML.Document' targetDocType='message:message' create='new' language='objectscript' >
<assign value='"OFFER"' property='target.{type}' action='set' />
<assign value='source.Price' property='target.{content}' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.DT.PriceRequest2XML">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64204,80853.39481</TimeChanged>
<TimeCreated>64204,80853.393707</TimeCreated>
<DependsOn>PYD.Venduino.Msg.PriceRequest,EnsLib.EDI.XML.Document</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='PYD.Venduino.Msg.PriceRequest' targetClass='EnsLib.EDI.XML.Document' targetDocType='message:message' create='new' language='objectscript' >
<assign value='"PRICE"' property='target.{type}' action='set' />
<assign value='source.Price' property='target.{content}' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.DT.XML2BuyRequest">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64207,49729.713505</TimeChanged>
<TimeCreated>64204,80472.50372</TimeCreated>
<DependsOn>EnsLib.EDI.XML.Document,PYD.Venduino.Msg.BuyRequest</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.EDI.XML.Document' targetClass='PYD.Venduino.Msg.BuyRequest' sourceDocType='message:message' create='new' language='objectscript' >
<assign value='..Piece(source.{/message/content},"|",1)' property='target.CardID' action='set' />
<assign value='..Piece(source.{/message/content},"|",2)' property='target.Tray' action='set' />
<assign value='..Piece(source.{/message/content},"|",3)' property='target.Price' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.DT.XML2CardRequest">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64207,49663.892755</TimeChanged>
<TimeCreated>64204,80157.741146</TimeCreated>
<DependsOn>EnsLib.EDI.XML.Document,PYD.Venduino.Msg.CardRequest</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.EDI.XML.Document' targetClass='PYD.Venduino.Msg.CardRequest' sourceDocType='message:message' create='new' language='objectscript' >
<assign value='source.{/message/content}' property='target.CardID' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.DT.XML2StatusRequest">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>64207,50594.202952</TimeChanged>
<TimeCreated>64204,80561.303756</TimeCreated>
<DependsOn>EnsLib.EDI.XML.Document,PYD.Venduino.Msg.StatusRequest</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='EnsLib.EDI.XML.Document' targetClass='PYD.Venduino.Msg.StatusRequest' sourceDocType='message:message' create='new' language='objectscript' >
<assign value='source.{/message/content}' property='target.Status' action='set' />
</transform>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.Data.Card">
<Description>
Card Owner Information</Description>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64207,35257.841976</TimeChanged>
<TimeCreated>64207,31856.774894</TimeCreated>

<Property name="CardID">
<Description>
The RFID Card Identifier</Description>
<Type>%String</Type>
</Property>

<Property name="Name">
<Description>
The FirstName of the Cwrd Owner</Description>
<Type>%String</Type>
</Property>

<Property name="Balance">
<Description>
the Balance amount left on the Card</Description>
<Type>%Integer</Type>
</Property>

<Index name="IxCardID">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>CardID</Properties>
</Index>

<Method name="AutoAdd">
<Description>
Method used to Automatically Add the CardID of a Card that has not yet been registered</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>CardID:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		if ($isObject(##class(PYD.Venduino.Data.Card).%OpenId(CardID))) {
			//Card already filed, do nothing
		}else {
			set c=##class(PYD.Venduino.Data.Card).%New()
			set c.CardID=CardID
			$$$THROWONERROR(tSC,c.%Save())
		}
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^PYD.Venduino.Data.CardD</DataLocation>
<DefaultData>CardDefaultData</DefaultData>
<IdLocation>^PYD.Venduino.Data.CardD</IdLocation>
<IndexLocation>^PYD.Venduino.Data.CardI</IndexLocation>
<StreamLocation>^PYD.Venduino.Data.CardS</StreamLocation>
<Data name="CardDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>Balance</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Data.Price">
<Description>
Current Item Price</Description>
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64212,33639.555096</TimeChanged>
<TimeCreated>64207,33227.377989</TimeCreated>

<Property name="Price">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<InitialExpression>2</InitialExpression>
</Property>

<Property name="SpecialOffer">
<Type>%Boolean</Type>
<Calculated>1</Calculated>
<InitialExpression>0</InitialExpression>
</Property>

<Method name="PriceGet">
<ReturnType>%Integer</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[	Quit $Get(^PYD.Venduino.Data.Price("Price"),2)
]]></Implementation>
</Method>

<Method name="PriceSet">
<FormalSpec>Arg:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[	set ^PYD.Venduino.Data.Price("Price")=Arg
]]></Implementation>
</Method>

<Method name="SpecialOfferGet">
<ReturnType>%Integer</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[	Quit $Get(^PYD.Venduino.Data.Price("SpecialOffer"),0)
]]></Implementation>
</Method>

<Method name="SpecialOfferSet">
<FormalSpec>Arg:%Boolean</FormalSpec>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[	set ^PYD.Venduino.Data.Price("SpecialOffer")=Arg
]]></Implementation>
</Method>
</Class>


<Class name="PYD.Venduino.Data.Sale">
<Description>
The Sale of an Item in the Venduino</Description>
<StorageStrategy/>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64207,51746.226888</TimeChanged>
<TimeCreated>64207,32771.647877</TimeCreated>

<Property name="DateTime">
<Description>
Date and Time of Transaction</Description>
<Type>%TimeStamp</Type>
</Property>

<Property name="Buyer">
<Description>
Designative Reference to the Buyer</Description>
<Type>PYD.Venduino.Data.Card</Type>
</Property>

<Property name="Item">
<Description>
Name of Item bought (Get it from Tray Objectat time of sale [allows to change tray content later])</Description>
<Type>%String</Type>
</Property>

<Property name="Amount">
<Description>
The Amount of the transaction</Description>
<Type>%Integer</Type>
</Property>

<Method name="Add">
<Description>
Add a New Transaction from a "BUY" Message and update all classes</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pCardID:%String,pTray:%Integer,pPrice:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	#DIM tCard as PYD.Venduino.Data.Card
	try {
		
		//--- Decrease the balance of the card
		set tCard=##class(PYD.Venduino.Data.Card).%OpenId(pCardID)
		set tCard.Balance=tCard.Balance-pPrice
		
		//--- Update the Tray Content 
		set tTray=##class(PYD.Venduino.Data.Tray).%OpenId(pTray)
		set tTray.Quantity=tTray.Quantity-1
		$$$THROWONERROR(tSC,tTray.%Save(1))
		
		//--- Insert the Transaction
		set t=##class(PYD.Venduino.Data.Sale).%New()
		set t.Amount=pPrice
		set t.Buyer=tCard
		set t.DateTime=$zdt($h,3)
		set t.Item=tTray.Item
		$$$THROWONERROR(tSC,t.%Save(1))
		
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^PYD.Venduino.Data.SaleD</DataLocation>
<DefaultData>SaleDefaultData</DefaultData>
<IdLocation>^PYD.Venduino.Data.SaleD</IdLocation>
<IndexLocation>^PYD.Venduino.Data.SaleI</IndexLocation>
<StreamLocation>^PYD.Venduino.Data.SaleS</StreamLocation>
<Data name="SaleDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>DateTime</Value>
</Value>
<Value name="3">
<Value>Buyer</Value>
</Value>
<Value name="4">
<Value>Item</Value>
</Value>
<Value name="5">
<Value>Amount</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Data.Status">
<Description>
The Online/Offline Status of the Venduino</Description>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64207,45051.259669</TimeChanged>
<TimeCreated>64207,43964.576376</TimeCreated>

<Property name="Device">
<Type>%String</Type>
</Property>

<Property name="Status">
<Type>%String</Type>
</Property>

<Property name="DateTime">
<Type>%TimeStamp</Type>
</Property>

<Index name="PKey">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>Device</Properties>
</Index>

<Method name="UpdateStatus">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDevice:%String,pStatus:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		set tStatus=##class(PYD.Venduino.Data.Status).%OpenId(pDevice)
		if ('$isObject(tStatus)) {
			set tStatus=##class(PYD.Venduino.Data.Status).%New()
			set tStatus.Device=pDevice
		}
		set tStatus.Status=pStatus
		set tStatus.DateTime=$zdt($h,3)
		$$$THROWONERROR(tSC,tStatus.%Save())
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^PYD.Venduino.Data.StatusD</DataLocation>
<DefaultData>StatusDefaultData</DefaultData>
<IdLocation>^PYD.Venduino.Data.StatusD</IdLocation>
<IndexLocation>^PYD.Venduino.Data.StatusI</IndexLocation>
<StreamLocation>^PYD.Venduino.Data.StatusS</StreamLocation>
<Data name="StatusDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Status</Value>
</Value>
<Value name="3">
<Value>DateTime</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Data.Tray">
<Description>
The Information of the Items in the Venduino Trays</Description>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64207,35274.070452</TimeChanged>
<TimeCreated>64207,32775.645027</TimeCreated>

<Property name="TrayID">
<Description>
The tray Number (1,2,3,4) (topleft,topright, bottomleft, bottomright)</Description>
<Type>%Integer</Type>
</Property>

<Property name="Item">
<Description>
The Description/Name of the Item contained in the tray</Description>
<Type>%String</Type>
</Property>

<Property name="Quantity">
<Description>
The Quantity of Items left</Description>
<Type>%Integer</Type>
</Property>

<Index name="ixKey">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>TrayID</Properties>
</Index>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^PYD.Venduino.Data.TrayD</DataLocation>
<DefaultData>TrayDefaultData</DefaultData>
<IdLocation>^PYD.Venduino.Data.TrayD</IdLocation>
<IndexLocation>^PYD.Venduino.Data.TrayI</IndexLocation>
<StreamLocation>^PYD.Venduino.Data.TrayS</StreamLocation>
<Data name="TrayDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Item</Value>
</Value>
<Value name="3">
<Value>Quantity</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.InputRouterRoutingRule">
<Description>
Routing for the incoming MQTT messages. The Business Services generates XML messages</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>64207,48720.689815</TimeChanged>
<TimeCreated>64204,77130.476987</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.VDocRuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.VDocRoutingEngine" production="PYD.Venduino.Production">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<trace value="Document.{/message}"></trace>
<rule name="Venduino Status Message">
<constraint name="msgClass" value="EnsLib.EDI.XML.Document"></constraint>
<constraint name="docCategory" value="message"></constraint>
<when condition="Document.{/message/type} Contains &quot;STATUS&quot;">
<send transform="PYD.Venduino.DT.XML2StatusRequest" target="Database"></send>
<return></return>
</when>
</rule>
<rule name="Card Owner Information" disabled="false">
<constraint name="msgClass" value="EnsLib.EDI.XML.Document"></constraint>
<constraint name="docCategory" value="message"></constraint>
<constraint name="docName" value="message"></constraint>
<when condition="Document.{/message/type} Contains &quot;CARD&quot;">
<send transform="PYD.Venduino.DT.XML2CardRequest" target="BPCard"></send>
<return></return>
</when>
</rule>
<rule name="Sale Information" disabled="false">
<constraint name="msgClass" value="EnsLib.EDI.XML.Document"></constraint>
<constraint name="docCategory" value="message"></constraint>
<when condition="Document.{/message/type} Contains &quot;BUY&quot;">
<send transform="PYD.Venduino.DT.XML2BuyRequest" target="Database"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.Msg.BuyRequest">
<Description>
The Message containing the information of the Item bought</Description>
<Super>Ens.Request</Super>
<TimeChanged>64204,80021.819779</TimeChanged>
<TimeCreated>64204,80004.407871</TimeCreated>

<Property name="CardID">
<Description>
The CardID of the Buyer</Description>
<Type>%String</Type>
</Property>

<Property name="Tray">
<Description>
The Number of the Tray from Which the item was bought</Description>
<Type>%Integer</Type>
</Property>

<Property name="Price">
<Description>
The Cost of he Item at the time of purchase</Description>
<Type>%Integer</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>BuyRequestDefaultData</DefaultData>
<Data name="BuyRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"BuyRequest"</Subscript>
<Value name="1">
<Value>CardID</Value>
</Value>
<Value name="2">
<Value>Tray</Value>
</Value>
<Value name="3">
<Value>Price</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Msg.CardReply">
<Description>
The Demografic data of the RFID Card Holder</Description>
<Super>Ens.Response</Super>
<TimeChanged>64207,39522.906716</TimeChanged>
<TimeCreated>64204,80002.246823</TimeCreated>

<Property name="CardID">
<Description>
The CardID (or empty if no card found in Database)</Description>
<Type>%String</Type>
</Property>

<Property name="Name">
<Description>
The Name of the Card Holder</Description>
<Type>%String</Type>
</Property>

<Property name="Balance">
<Description>
The Balance left on the Card</Description>
<Type>%Integer</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>CardReplyDefaultData</DefaultData>
<Data name="CardReplyDefaultData">
<Subscript>"CardReply"</Subscript>
<Value name="1">
<Value>Name</Value>
</Value>
<Value name="2">
<Value>Balance</Value>
</Value>
<Value name="3">
<Value>CardID</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Msg.CardRequest">
<Description>
A Card Information request</Description>
<Super>Ens.Request</Super>
<TimeChanged>64204,80021.900151</TimeChanged>
<TimeCreated>64204,80000.067903</TimeCreated>

<Property name="CardID">
<Description>
The Identifier of the RFID Card</Description>
<Type>%String</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>CardRequestDefaultData</DefaultData>
<Data name="CardRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"CardRequest"</Subscript>
<Value name="1">
<Value>CardID</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Msg.OfferRequest">
<Description>
Message to send when a Special Price is availble</Description>
<Super>Ens.Request</Super>
<TimeChanged>64204,80021.908966</TimeChanged>
<TimeCreated>64204,80010.537735</TimeCreated>

<Property name="Price">
<Description>
Special Offer Price. As the Topic is different, 
the venduino can display a special message</Description>
<Type>%Integer</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>OfferRequestDefaultData</DefaultData>
<Data name="OfferRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"OfferRequest"</Subscript>
<Value name="1">
<Value>Price</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Msg.PriceRequest">
<Description>
a Message to send a new Price information to the venduino</Description>
<Super>Ens.Request</Super>
<TimeChanged>64204,80021.96382</TimeChanged>
<TimeCreated>64204,80008.706709</TimeCreated>

<Property name="Price">
<Description>
The new item price</Description>
<Type>%Integer</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>PriceRequestDefaultData</DefaultData>
<Data name="PriceRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"PriceRequest"</Subscript>
<Value name="1">
<Value>Price</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.Msg.StatusRequest">
<Description>
Informational message stating the Venduino is online</Description>
<Super>Ens.Request</Super>
<TimeChanged>64204,80021.981225</TimeChanged>
<TimeCreated>64204,80006.606746</TimeCreated>

<Property name="Status">
<Description>
"ONLINE"</Description>
<Type>%String</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>StatusRequestDefaultData</DefaultData>
<Data name="StatusRequestDefaultData">
<Structure>listnode</Structure>
<Subscript>"StatusRequest"</Subscript>
<Value name="1">
<Value>Status</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="PYD.Venduino.OutputRouterRoutingRule">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>64207,45801.415074</TimeChanged>
<TimeCreated>64204,78354.176593</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>EnsLib.MsgRouter.RuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="EnsLib.MsgRouter.RoutingEngine" production="PYD.Venduino.Production">
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="Card Reply">
<constraint name="msgClass" value="PYD.Venduino.Msg.CardReply"></constraint>
<when condition="1">
<send transform="PYD.Venduino.DT.CardReply2XML" target="MqttPub"></send>
<return></return>
</when>
</rule>
<rule name="OFFER" disabled="false">
<constraint name="msgClass" value="PYD.Venduino.Msg.OfferRequest"></constraint>
<when condition="1">
<send transform="PYD.Venduino.DT.OfferRequest2XML" target="MqttPub"></send>
<return></return>
</when>
</rule>
<rule name="PRICE" disabled="false">
<constraint name="msgClass" value="PYD.Venduino.Msg.PriceRequest"></constraint>
<when condition="1">
<send transform="PYD.Venduino.DT.PriceRequest2XML" target="MqttPub"></send>
<return></return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>




<Class name="PYD.Venduino.Production">
<Super>Ens.Production</Super>
<TimeChanged>64212,39018.951221</TimeChanged>
<TimeCreated>64140,50980.393707</TimeCreated>

<XData name="ProductionDefinition">
<Data><![CDATA[
<Production Name="PYD.Venduino.Production" TestingEnabled="true" LogGeneralTraceEvents="true">
  <Description>Handles MQTT Messages for Venduino Mini-Vending machine</Description>
  <ActorPoolSize>2</ActorPoolSize>
  <Setting Target="Adapter" Name="ShutdownTimeout">20</Setting>
  <Item Name="JavaInitiator" Category="" ClassName="EnsLib.JavaGateway.Initiator" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="JDKVersion">JDK18</Setting>
    <Setting Target="Host" Name="Port">55570</Setting>
    <Setting Target="Host" Name="JavaHome">/usr/java/latest</Setting>
    <Setting Target="Host" Name="ClassPath">/iot/VenduinoBS.jar:/iot/VenduinBO.jar:/iot/org.eclipse.paho.client.mqttv3-1.1.0.jar</Setting>
    <Setting Target="Host" Name="AlertOnError">1</Setting>
    <Setting Target="Host" Name="Logfile"></Setting>
    <Setting Target="Host" Name="HeartbeatFailureRetry">60</Setting>
    <Setting Target="Host" Name="HeartbeatInterval">20</Setting>
  </Item>
  <Item Name="InputRouter" Category="" ClassName="EnsLib.MsgRouter.VDocRoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="Validation"></Setting>
    <Setting Target="Host" Name="BusinessRuleName">PYD.Venduino.InputRouterRoutingRule</Setting>
    <Setting Target="Host" Name="RuleLogging">a</Setting>
    <Setting Target="Host" Name="AlertOnError">1</Setting>
  </Item>
  <Item Name="MqttSub" Category="" ClassName="PYD.Venduino.BS.MqttSub" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="AlertOnError">1</Setting>
    <Setting Target="Host" Name="Credentials">SYSTEM</Setting>
    <Setting Target="Host" Name="DocSchemaCategory">message</Setting>
    <Setting Target="Host" Name="MQTTClientName">EnsembleSub</Setting>
    <Setting Target="Host" Name="MQTTPort">1883</Setting>
    <Setting Target="Host" Name="MQTTServer">127.0.0.1</Setting>
    <Setting Target="Host" Name="MQTTTopic">Venduino/Ens/#</Setting>
    <Setting Target="Host" Name="TargetConfigNames">InputRouter</Setting>
  </Item>
  <Item Name="MqttPub" Category="" ClassName="PYD.Venduino.BO.MqttPub" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="AlertOnError">1</Setting>
    <Setting Target="Host" Name="MQTTClientName">EnsemblePub</Setting>
    <Setting Target="Host" Name="MQTTPort">1883</Setting>
    <Setting Target="Host" Name="MQTTServer">127.0.0.1</Setting>
    <Setting Target="Host" Name="MQTTTopicRoot">Venduino/Dev/A/</Setting>
    <Setting Target="Host" Name="Port">55570</Setting>
    <Setting Target="Host" Name="LogFile">/tmp/bo.log</Setting>
  </Item>
  <Item Name="OutputRouter" Category="" ClassName="EnsLib.MsgRouter.RoutingEngine" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="Validation"></Setting>
    <Setting Target="Host" Name="BusinessRuleName">PYD.Venduino.OutputRouterRoutingRule</Setting>
    <Setting Target="Host" Name="RuleLogging">a</Setting>
    <Setting Target="Host" Name="AlertOnError">1</Setting>
  </Item>
  <Item Name="Database" Category="" ClassName="PYD.Venduino.BO.Database" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="isAutoCreate">1</Setting>
  </Item>
  <Item Name="UICalls" Category="" ClassName="PYD.Venduino.BS.UICalls" PoolSize="0" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="TargetConfigNames">OutputRouter</Setting>
  </Item>
  <Item Name="BPCard" Category="" ClassName="PYD.Venduino.BP.BPCard" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
  </Item>
</Production>
]]></Data>
</XData>
</Class>


<Class name="PYD.Venduino.UI.RestServer">
<Description>
Rest Server Class doe the UI of theVenduino Device</Description>
<Super>%CSP.REST</Super>
<TimeChanged>64212,45305.696219</TimeChanged>
<TimeCreated>64204,73848.951437</TimeCreated>

<XData name="UrlMap">
<XMLNamespace>http://www.intersystems.com/urlmap</XMLNamespace>
<Data><![CDATA[
<Routes>
<Route Url="/ListSales" Method="POST" Call="ListSales" />
<Route Url="/ListTrays" Method="POST" Call="ListTrays" />
<Route Url="/ListCards" Method="POST" Call="ListCards" />
<Route Url="/ChangePrice" Method="POST" Call="ChangePrice" />
<Route Url="/PriceGet" Method="POST" Call="PriceGet" />
</Routes>
]]></Data>
</XData>

<Method name="Init">
<Description>
Common code for all REST/JSon method</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		set %response.CharSet = "utf-8"
		set %response.ContentType="application/json"
	} catch errObj {
		set tSC = errObj.AsStatus()	
	}
	quit tSC
]]></Implementation>
</Method>

<Method name="ChangePrice">
<Description>
Change the Price and Set the Special Offer Flag
{ SpecialOffer:true,Price:123}</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status = $$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		$$$THROWONERROR(tSC, ..Init())
		//Parse JSON
		set postData = $zconvert(%request.Content.Read(),"I","UTF8")
		$$$THROWONERROR(tSC, ##class(Ens.Util.JSON).JSONStreamToObject(postData, .tObj, "%ZEN.proxyObject"))
		#DIM tService as Ens.BusinessService
	 	$$$THROWONERROR(tSC,##class(Ens.Director).CreateBusinessService("UICalls",.tService))
	 	if (tObj.SpecialOffer=1) {
			do tService.Offer(tObj.Price)	
	 	}else {
		 	do tService.Price(tObj.Price)
	 	}
	 	//Store the New Price in our Server Database
	 	set tP=##class(PYD.Venduino.Data.Price).%New()
	 	set tP.Price=+tObj.Price
	 	set tP.SpecialOffer=tObj.SpecialOffer
	 	
		//Empty Response
		write "{}",!
		
		//$$$THROWONERROR(tSC,##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL("",tSql))
	} catch errObj {
		set tSC = errObj.AsStatus()
	}
  quit tSC
]]></Implementation>
</Method>

<Method name="PriceGet">
<Description>
Returns the Current Price and Special Offer Status
{ SpecialOffer:true,Price:123}</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status = $$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		$$$THROWONERROR(tSC, ..Init())
		
	 	set tP=##class(PYD.Venduino.Data.Price).%New()
	 	
	 	///Return as JSON
		do ##class(%ZEN.Auxiliary.jsonProvider).%ObjectToJSON(tP,,,"iw")
	} catch errObj {
		set tSC = errObj.AsStatus()
	}
  quit tSC
]]></Implementation>
</Method>

<Method name="ListSales">
<Description>
Lists the last 10 sales</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status = $$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		$$$THROWONERROR(tSC, ..Init())
		//Parse JSON
		//set postData = $zconvert(%request.Content.Read(),"I","UTF8")
		//$$$THROWONERROR(tSC, ##class(Ens.Util.JSON).JSONStreamToObject(postData, .tObj, "%ZEN.proxyObject"))
		
		set tSql= "SELECT top 10 ID, DateTime, Buyer->Name as Name , Item , Amount from PYD_Venduino_Data.Sale order by ID DESC"
		$$$THROWONERROR(tSC,##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL("",tSql))
	} catch errObj {
		set tSC = errObj.AsStatus()
	}
  quit $$$OK
]]></Implementation>
</Method>

<Method name="ListTrays">
<Description>
Lists the Trays Content</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status = $$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		$$$THROWONERROR(tSC, ..Init())
		
		set tSql= "SELECT TrayID, Quantity, Item from PYD_Venduino_Data.Tray order by TrayID ASC"
		$$$THROWONERROR(tSC,##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL("",tSql))
	} catch errObj {
		set tSC = errObj.AsStatus()
	}
  quit $$$OK
]]></Implementation>
</Method>

<Method name="ListCards">
<Description>
Lists the Card Owners</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status = $$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		$$$THROWONERROR(tSC, ..Init())
		
		set tSql= "SELECT top 10 CardID, Name, Balance  from PYD_Venduino_Data.Card order by CardID ASC"
		$$$THROWONERROR(tSC,##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL("",tSql))
	} catch errObj {
		set tSC = errObj.AsStatus()
	}
  quit $$$OK
]]></Implementation>
</Method>

<Parameter name="HandleCorsRequest">
<Description>
This parameter influences the CORS support. The default is an empty string meaning 'not specified'.
If set to true (1) then CORS processing is ON. If set to false (0) then CORS processing is OFF.
If left unset "" then the decision to process CORS is delegated to the setting on the URL map route.</Description>
<Default>1</Default>
</Parameter>
</Class>


<Class name="PYD.Venduino.Util">
<Description>
Some Utility Class to Initialize Values for the Cards and the Venduino Content</Description>
<Super>%RegisteredObject</Super>
<TimeChanged>64218,30125.405362</TimeChanged>
<TimeCreated>64207,32777.995154</TimeCreated>

<Method name="Init">
<Description>
Initialize  the Tables to the default values</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#DIM tSC as %Status=$$$OK
	#DIM errObj as %Exception.AbstractException
	try {
		//Cleanup
		do ##class(PYD.Venduino.Data.Card).%KillExtent()
		//do ##class(PYD.Venduino.Data.Sale).%KillExtent()
		do ##class(PYD.Venduino.Data.Tray).%KillExtent()
		//Initialize the Trays
		$$$THROWONERROR(tSC,..AddTray(1,"Smint de Fresa",3))
		$$$THROWONERROR(tSC,..AddTray(2,"Smint de Menta",3))
		$$$THROWONERROR(tSC,..AddTray(3,"Chicle de Fresa",3))
		$$$THROWONERROR(tSC,..AddTray(4,"Chicle de Menta",3))
		//Initialize some Cards
		$$$THROWONERROR(tSC,..AddCard("33-93-14-B5","Pierre-Yves",99))
		$$$THROWONERROR(tSC,..AddCard("94-F8-04-F5","Alice",21))
		$$$THROWONERROR(tSC,..AddCard("B4-66-01-F5","Alberto",3))
		$$$THROWONERROR(tSC,..AddCard("D4-95-02-F5","Helene",33))
		$$$THROWONERROR(tSC,..AddCard("53-BB-BA-EC","Jordi",50))
		
		//Initialize the ItemPrice
		
	}catch (errObj){
		if ($p'="") { Write "CATCH:",errObj.DisplayString(),! }
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Method name="AddTray">
<ClassMethod>1</ClassMethod>
<FormalSpec>pTray:%Integer,pItem:%String,pQuantity:%Integer</FormalSpec>
<Implementation><![CDATA[
	try {
		set x=##class(PYD.Venduino.Data.Tray).%New()
		set x.TrayID=pTray
		set x.Item=pItem
		set x.Quantity=pQuantity
		$$$THROWONERROR(tSC,x.%Save())
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Method name="AddCard">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCardID:%String,pName:%String,pBalance:%Integer</FormalSpec>
<Implementation><![CDATA[
	try {
		set x=##class(PYD.Venduino.Data.Card).%New()
		set x.CardID=pCardID
		set x.Name=pName
		set x.Balance=pBalance
		$$$THROWONERROR(tSC,x.%Save())
	}catch (errObj) {
		set tSC=errObj.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>
</Class>


<Class name="PYD.Venduino.java.MqttBO">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>64204,81976</TimeChanged>
<TimeCreated>64204,81976</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2016-10-13 22:42:18.0</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Quit:'$D(p0) $$$OK
	Quit ..%Constructor(p0,"PYD.Venduino.java.MqttBO",0)
]]></Implementation>
</Method>

<Method name="onMessage">
<FormalSpec><![CDATA[&p0:%ObjectHandle]]></FormalSpec>
<ReturnType>%ObjectHandle</ReturnType>
<Implementation><![CDATA[	Quit ..%IR("onMessage",.p0)
]]></Implementation>
</Method>

<Method name="onTearDownBO">
<ReturnType>%ObjectHandle</ReturnType>
<Implementation><![CDATA[	Quit ..%IR("onTearDownBO")
]]></Implementation>
</Method>

<Method name="onInitBO">
<FormalSpec><![CDATA[&p0:%ObjectHandle]]></FormalSpec>
<ReturnType>%ObjectHandle</ReturnType>
<Implementation><![CDATA[
	Do ..%PreInvoke()
	Set x=$zobjexport("onInitBO",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.String;",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke()
	Quit x
]]></Implementation>
</Method>

<Parameter name="SETTINGS">
<Type>STRING</Type>
<Default>MQTTServer,MQTTPort,MQTTClientName,MQTTTopicRoot,LogFile</Default>
</Parameter>
</Class>


<Class name="PYD.Venduino.java.MqttBS">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>64204,78015</TimeChanged>
<TimeCreated>64204,78015</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2016-10-13 21:15:21.0</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Quit:'$D(p0) $$$OK
	Quit ..%Constructor(p0,"PYD.Venduino.java.MqttBS",0)
]]></Implementation>
</Method>

<Method name="connectionLost">
<FormalSpec><![CDATA[&p0:%ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[	Do ..%I("connectionLost",.p0)
]]></Implementation>
</Method>

<Method name="onInitBS">
<FormalSpec><![CDATA[&p0:%ObjectHandle]]></FormalSpec>
<ReturnType>%ObjectHandle</ReturnType>
<Implementation><![CDATA[	Quit ..%IR("onInitBS",.p0)
]]></Implementation>
</Method>

<Method name="messageArrived">
<FormalSpec><![CDATA[&p0:%ObjectHandle,&p1:%ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[	Do ..%I("messageArrived",.p0,.p1)
]]></Implementation>
</Method>

<Method name="onTearDownBS">
<ReturnType>%ObjectHandle</ReturnType>
<Implementation><![CDATA[	Quit ..%IR("onTearDownBS")
]]></Implementation>
</Method>

<Method name="deliveryComplete">
<FormalSpec><![CDATA[&p0:%ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[	Do ..%I("deliveryComplete",.p0)
]]></Implementation>
</Method>

<Parameter name="SETTINGS">
<Type>STRING</Type>
<Default>MQTTServer,MQTTPort,MQTTClientName,MQTTTopic</Default>
</Parameter>
</Class>


<Project name="VenduinoServer" LastModified="2016-11-02 12:46:43.433105">
  <Items>
    <ProjectItem name="PYD.Venduino" type="PKG"></ProjectItem>
  </Items>
</Project>
</Export>
